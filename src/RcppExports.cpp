// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// dmvnrm_arma
arma::vec dmvnrm_arma(const arma::mat& x, const arma::rowvec& mean, const arma::mat& sigma);
RcppExport SEXP aeep_dmvnrm_arma(SEXP xSEXP, SEXP meanSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma(sigmaSEXP);
    __result = Rcpp::wrap(dmvnrm_arma(x, mean, sigma));
    return __result;
END_RCPP
}
// mvrnorm_arma
arma::mat mvrnorm_arma(int n, const arma::vec& mu, const arma::mat& sigma);
RcppExport SEXP aeep_mvrnorm_arma(SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma(sigmaSEXP);
    __result = Rcpp::wrap(mvrnorm_arma(n, mu, sigma));
    return __result;
END_RCPP
}
// post_vcm
arma::mat post_vcm(const List& post_list, int d, int M);
RcppExport SEXP aeep_post_vcm(SEXP post_listSEXP, SEXP dSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const List& >::type post_list(post_listSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    __result = Rcpp::wrap(post_vcm(post_list, d, M));
    return __result;
END_RCPP
}
// post_mean
arma::vec post_mean(const List& post_list, const arma::mat& post_vcm, int d, int M);
RcppExport SEXP aeep_post_mean(SEXP post_listSEXP, SEXP post_vcmSEXP, SEXP dSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const List& >::type post_list(post_listSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type post_vcm(post_vcmSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    __result = Rcpp::wrap(post_mean(post_list, post_vcm, d, M));
    return __result;
END_RCPP
}
// theta_bar
arma::vec theta_bar(const arma::vec& t, const List& post_list, double h, int d, int M);
RcppExport SEXP aeep_theta_bar(SEXP tSEXP, SEXP post_listSEXP, SEXP hSEXP, SEXP dSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const List& >::type post_list(post_listSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    __result = Rcpp::wrap(theta_bar(t, post_list, h, d, M));
    return __result;
END_RCPP
}
// mix_weight
double mix_weight(const arma::vec& t, const List& post_list, double h, int d, int M, const arma::vec& theta_b);
RcppExport SEXP aeep_mix_weight(SEXP tSEXP, SEXP post_listSEXP, SEXP hSEXP, SEXP dSEXP, SEXP MSEXP, SEXP theta_bSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const List& >::type post_list(post_listSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type theta_b(theta_bSEXP);
    __result = Rcpp::wrap(mix_weight(t, post_list, h, d, M, theta_b));
    return __result;
END_RCPP
}
// combine_np
arma::mat combine_np(const List& post_list);
RcppExport SEXP aeep_combine_np(SEXP post_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const List& >::type post_list(post_listSEXP);
    __result = Rcpp::wrap(combine_np(post_list));
    return __result;
END_RCPP
}
// mix_weight_sp
arma::vec mix_weight_sp(const arma::vec& t, const arma::mat& sig_M, const arma::vec& mu_M, const double& w_t_dot, const List& post_list, const double& h, const int& d, const int& M, const List& post_means, const List& post_vcms, const arma::vec& theta_b);
RcppExport SEXP aeep_mix_weight_sp(SEXP tSEXP, SEXP sig_MSEXP, SEXP mu_MSEXP, SEXP w_t_dotSEXP, SEXP post_listSEXP, SEXP hSEXP, SEXP dSEXP, SEXP MSEXP, SEXP post_meansSEXP, SEXP post_vcmsSEXP, SEXP theta_bSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type t(tSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sig_M(sig_MSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu_M(mu_MSEXP);
    Rcpp::traits::input_parameter< const double& >::type w_t_dot(w_t_dotSEXP);
    Rcpp::traits::input_parameter< const List& >::type post_list(post_listSEXP);
    Rcpp::traits::input_parameter< const double& >::type h(hSEXP);
    Rcpp::traits::input_parameter< const int& >::type d(dSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const List& >::type post_means(post_meansSEXP);
    Rcpp::traits::input_parameter< const List& >::type post_vcms(post_vcmsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type theta_b(theta_bSEXP);
    __result = Rcpp::wrap(mix_weight_sp(t, sig_M, mu_M, w_t_dot, post_list, h, d, M, post_means, post_vcms, theta_b));
    return __result;
END_RCPP
}
// combine_sp
arma::mat combine_sp(const List& post_list);
RcppExport SEXP aeep_combine_sp(SEXP post_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const List& >::type post_list(post_listSEXP);
    __result = Rcpp::wrap(combine_sp(post_list));
    return __result;
END_RCPP
}
